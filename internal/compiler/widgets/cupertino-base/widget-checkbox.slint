// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial


import { md } from "md.slint";
import { cupertino } from "cupertino.slint";

// Selection control that can be toggled between checked und unchecked by click.
export CheckBox := Rectangle {
    callback toggled;

    in property <string> text <=> label.text;
    in-out property <bool> checked;
    out property <bool> has-focus: fs.has-focus;
    in property<bool> enabled: true;

    height: 31px;

    accessible-label <=> label.text;
    accessible-checkable: true;
    accessible-checked <=> checked;
    accessible-role: checkbox;
    horizontal-stretch: 1;
    vertical-stretch: 0;

    layout := HorizontalLayout {  
        spacing: 16px;

        // switch
        switch := Rectangle {  
            width: 51px;
            height: 31px;
            border-radius: 16px;
            background: cupertino.palette.background-grey;

            // circle
            circle := Rectangle {  
                x: 2px;
                y: 2px;
                width: 27px;
                height: 27px;
                background: cupertino.palette.white;
                border-radius: height / 2;
                drop-shadow-blur: 2px;
                drop-shadow-offset-y: 2px;
                drop-shadow-color: cupertino.palette.shadow;
            }   
        }

        label := Text {
            color: cupertino.palette.text;
            horizontal-alignment: left;
            vertical-alignment: center;
            vertical-stretch: 1;
            font-size: cupertino.typo.default.font-size;
            font-weight: cupertino.typo.default.font-weight;
        }
    }

    touch := TouchArea {
        x: layout.padding-left;
        width: layout.width - layout.padding-left - layout.padding-right;
        height: 100%;
        enabled <=> root.enabled;
        clicked => {
            if (root.enabled) {
                root.checked = !root.checked;
                root.toggled();
            }
        }
    }

    fs := FocusScope {
        width: 0px; // Do not react on clicks
        enabled <=> root.enabled;

        key-pressed(event) => {
            if (event.text == " " || event.text == "\n") {
                 touch.clicked();
                 return accept;
            }
            return reject;
        }
    }

    states [
        disabled when !root.enabled && !root.checked: {
            opacity: cupertino.opacity-disabled;
            circle.drop-shadow-color: transparent;
            circle.drop-shadow-blur: 0px;
            circle.drop-shadow-offset-y: 0px;
         }
        disabled-checked when !root.enabled && root.checked: {
            circle.x: switch.width - circle.width - 2px;
            opacity: cupertino.opacity-disabled;
            circle.drop-shadow-color: transparent;
            circle.drop-shadow-blur: 0px;
            circle.drop-shadow-offset-y: 0px;
        }
        pressed when touch.pressed && !root.checked: {
            circle.width: 35px;

            in {
                animate circle.width { duration: cupertino.durations.fast; }
            }
        }
        pressed-checked when root.checked && touch.pressed: {
            circle.width: 35px;
            circle.x: switch.width - circle.width - 2px;
            switch.background: cupertino.palette.default;

            in {
                animate circle.width { duration: cupertino.durations.fast; }
            }

            out {
                animate circle.x { duration: cupertino.durations.fast; }
                animate switch.background { duration: cupertino.durations.fast; }
            }
        }
        checked when root.checked: {
            circle.x: switch.width - circle.width - 2px;
            switch.background: cupertino.palette.default;
         
            in {
                animate circle.x { duration: cupertino.durations.fast; }
                animate switch.background { duration: cupertino.durations.fast; }
            }
        }
    ]
}
